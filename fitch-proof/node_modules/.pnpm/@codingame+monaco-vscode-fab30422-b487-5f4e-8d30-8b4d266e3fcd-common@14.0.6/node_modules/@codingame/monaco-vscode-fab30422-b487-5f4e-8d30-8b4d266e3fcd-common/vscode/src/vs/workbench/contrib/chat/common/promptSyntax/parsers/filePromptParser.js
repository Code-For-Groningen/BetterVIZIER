
import { __decorate, __param } from '@codingame/monaco-vscode-api/external/tslib/tslib.es6';
import { BasePromptParser } from './basePromptParser.js';
import { ILogService } from '@codingame/monaco-vscode-api/vscode/vs/platform/log/common/log.service';
import { FilePromptContentProvider } from '../contentProviders/filePromptContentsProvider.js';
import { IConfigurationService } from '@codingame/monaco-vscode-api/vscode/vs/platform/configuration/common/configuration.service';
import { IInstantiationService } from '@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/instantiation';

let FilePromptParser = class FilePromptParser extends BasePromptParser {
    constructor(uri, seenReferences = [], initService, configService, logService) {
        const contentsProvider = initService.createInstance(FilePromptContentProvider, uri);
        super(contentsProvider, seenReferences, initService, configService, logService);
    }
    toString() {
        return `file-prompt:${this.uri.path}`;
    }
};
FilePromptParser = ( __decorate([
    ( __param(2, IInstantiationService)),
    ( __param(3, IConfigurationService)),
    ( __param(4, ILogService))
], FilePromptParser));

export { FilePromptParser };
