import { ErrorLensOptions } from './types';
import { MonacoErrorLens } from './monaco-error-lens';
/**
 * Monaco Error Lens - Visual diagnostic enhancements for Monaco Editor
 *
 * This package provides Error Lens functionality for Monaco Editor, making
 * diagnostics more visually prominent through inline messages, line highlighting,
 * and gutter icons.
 *
 * @packageDocumentation
 */
export { MonacoErrorLens } from './monaco-error-lens';
export type { ErrorLensOptions, ErrorLensConfig, ErrorLensColors, MonacoEditor, MonacoMarkerData, MonacoDisposable, MonacoModule, } from './types';
export { getSeverityClass, formatMessage, debounce, throttle, mergeOptions, sortMarkers, groupMarkersByLine, countMarkersBySeverity, } from './utils';
export { DecorationManager } from './decorations';
export { SimpleEventEmitter } from './event-emitter';
export { DEFAULT_OPTIONS, SEVERITY_LEVELS, CSS_CLASSES, } from './types';
export declare const VERSION = "1.0.0";
/**
 * Check if Monaco Editor is available
 */
export declare function isMonacoAvailable(): boolean;
/**
 * Get Monaco Editor instance (if available)
 */
export declare function getMonaco(): unknown | null;
/**
 * Default factory function for easy instantiation
 */
export declare function createErrorLens(editor: import('./types').MonacoEditor, monaco: import('./types').MonacoModule, options?: ErrorLensOptions): MonacoErrorLens;
/**
 * Quick setup function that applies default configuration
 */
export declare function setupErrorLens(editor: import('./types').MonacoEditor, monaco: import('./types').MonacoModule, options?: ErrorLensOptions): MonacoErrorLens;
/**
 * Create Error Lens with minimal features for better performance
 */
export declare function createMinimalErrorLens(editor: import('./types').MonacoEditor, monaco: import('./types').MonacoModule, options?: ErrorLensOptions): MonacoErrorLens;
export default MonacoErrorLens;
//# sourceMappingURL=index.d.ts.map