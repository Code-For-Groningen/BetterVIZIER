
import { __decorate, __param } from '@codingame/monaco-vscode-api/external/tslib/tslib.es6';
import { EditorModel } from '@codingame/monaco-vscode-a17f5129-e16c-5dac-857e-dcd91bfeffa2-common/vscode/vs/workbench/common/editor/editorModel';
import { IFileService } from '@codingame/monaco-vscode-api/vscode/vs/platform/files/common/files.service';
import { Mimes } from '@codingame/monaco-vscode-api/vscode/vs/base/common/mime';

let BinaryEditorModel = class BinaryEditorModel extends EditorModel {
    constructor(resource, name, fileService) {
        super();
        this.resource = resource;
        this.name = name;
        this.fileService = fileService;
        this.mime = Mimes.binary;
    }
    getName() {
        return this.name;
    }
    getSize() {
        return this.size;
    }
    getMime() {
        return this.mime;
    }
    getETag() {
        return this.etag;
    }
    async resolve() {
        if (this.fileService.hasProvider(this.resource)) {
            const stat = await this.fileService.stat(this.resource);
            this.etag = stat.etag;
            if (typeof stat.size === 'number') {
                this.size = stat.size;
            }
        }
        return super.resolve();
    }
};
BinaryEditorModel = ( __decorate([
    ( __param(2, IFileService))
], BinaryEditorModel));

export { BinaryEditorModel };
