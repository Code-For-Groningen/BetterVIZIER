
import { ViewContainerLocation } from '../../../common/views.js';
import { Parts } from '../../../services/layout/browser/layoutService.js';
import { CHAT_PROVIDER_ID } from '../common/chatParticipantContribTypes.js';

async function showChatView(viewsService) {
    return (await viewsService.openView(ChatViewId))?.widget;
}
async function showEditsView(viewsService) {
    return (await viewsService.openView(EditsViewId))?.widget;
}
function preferCopilotEditsView(viewsService) {
    if (viewsService.getFocusedView()?.id === ChatViewId || !!viewsService.getActiveViewWithId(ChatViewId)) {
        return false;
    }
    return !!viewsService.getActiveViewWithId(EditsViewId);
}
function showCopilotView(viewsService, layoutService) {
    if (layoutService.activeContainer !== layoutService.mainContainer) {
        layoutService.mainContainer.focus();
    }
    if (preferCopilotEditsView(viewsService)) {
        return showEditsView(viewsService);
    }
    else {
        return showChatView(viewsService);
    }
}
function ensureSideBarChatViewSize(viewDescriptorService, layoutService, viewsService) {
    const viewId = preferCopilotEditsView(viewsService) ? EditsViewId : ChatViewId;
    const location = viewDescriptorService.getViewLocationById(viewId);
    if (location === ViewContainerLocation.Panel) {
        return;
    }
    const viewPart = location === ViewContainerLocation.Sidebar ? Parts.SIDEBAR_PART : Parts.AUXILIARYBAR_PART;
    const partSize = layoutService.getSize(viewPart);
    let adjustedChatWidth;
    if (partSize.width < 400 && layoutService.mainContainerDimension.width > 1200) {
        adjustedChatWidth = 400;
    }
    else if (partSize.width < 300) {
        adjustedChatWidth = 300;
    }
    if (typeof adjustedChatWidth === 'number') {
        layoutService.setSize(viewPart, { width: adjustedChatWidth, height: partSize.height });
    }
}
const ChatViewId = `workbench.panel.chat.view.${CHAT_PROVIDER_ID}`;
const EditsViewId = 'workbench.panel.chat.view.edits';

export { ChatViewId, EditsViewId, ensureSideBarChatViewSize, preferCopilotEditsView, showChatView, showCopilotView, showEditsView };
