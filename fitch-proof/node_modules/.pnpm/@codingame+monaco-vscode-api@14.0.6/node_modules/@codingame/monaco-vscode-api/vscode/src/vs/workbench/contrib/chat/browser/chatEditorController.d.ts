import { Disposable } from "../../../../base/common/lifecycle.js";
import { IObservable } from "../../../../base/common/observable.js";
import { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition } from "../../../../editor/browser/editorBrowser.js";
import { IEditorContribution } from "../../../../editor/common/editorCommon.js";
import { RawContextKey } from "../../../../platform/contextkey/common/contextkey.js";
import { IContextKeyService } from "../../../../platform/contextkey/common/contextkey.service.js";
import { IModifiedFileEntry } from "../common/chatEditingService.js";
import { IChatEditingService } from "../common/chatEditingService.service.js";
import { IInstantiationService } from "../../../../platform/instantiation/common/instantiation.js";
import { IEditorService } from "../../../services/editor/common/editorService.service.js";
import { DetailedLineRangeMapping } from "../../../../editor/common/diff/rangeMapping.js";
import { IChatAgentService } from "../common/chatAgents.service.js";
import { IChatService } from "../common/chatService.service.js";
export declare const ctxIsGlobalEditingSession: RawContextKey<boolean>;
export declare const ctxHasEditorModification: RawContextKey<boolean>;
export declare const ctxHasRequestInProgress: RawContextKey<boolean>;
export declare const ctxReviewModeEnabled: RawContextKey<boolean>;
export declare class ChatEditorController extends Disposable implements IEditorContribution {
    private readonly _editor;
    private readonly _chatEditingService;
    private readonly _instantiationService;
    private readonly _chatAgentService;
    private readonly _editorService;
    static readonly ID = "editor.contrib.chatEditorController";
    private static _diffLineDecorationData;
    private readonly _diffLineDecorations;
    private readonly _diffVisualDecorations;
    private readonly _diffHunksRenderStore;
    private readonly _diffHunkWidgets;
    private _viewZones;
    private readonly _overlayCtrl;
    private readonly _ctxIsGlobalEditsSession;
    private readonly _ctxHasEditorModification;
    private readonly _ctxRequestInProgress;
    private readonly _ctxReviewModelEnabled;
    static get(editor: ICodeEditor): ChatEditorController | null;
    private readonly _currentEntryIndex;
    readonly currentEntryIndex: IObservable<number | undefined>;
    private readonly _currentChangeIndex;
    readonly currentChangeIndex: IObservable<number | undefined>;
    private _scrollLock;
    constructor(_editor: ICodeEditor, _chatEditingService: IChatEditingService, _instantiationService: IInstantiationService, _chatAgentService: IChatAgentService, _editorService: IEditorService, contextKeyService: IContextKeyService, chatService: IChatService);
    dispose(): void;
    private _clear;
    private _clearDiffRendering;
    private _updateDiffRendering;
    private _updateDiffLineDecorations;
    unlockScroll(): void;
    initNavigation(): void;
    revealNext(strict?: boolean): boolean;
    revealPrevious(strict?: boolean): boolean;
    private _reveal;
    private _findClosestWidget;
    rejectNearestChange(closestWidget: DiffHunkWidget | undefined): void;
    acceptNearestChange(closestWidget: DiffHunkWidget | undefined): void;
    toggleDiff(widget: DiffHunkWidget | undefined): Promise<void>;
}
declare class DiffHunkWidget implements IOverlayWidget {
    readonly entry: IModifiedFileEntry;
    private readonly _change;
    private readonly _versionId;
    private readonly _editor;
    private readonly _lineDelta;
    private static _idPool;
    private readonly _id;
    private readonly _domNode;
    private readonly _store;
    private _position;
    private _lastStartLineNumber;
    constructor(entry: IModifiedFileEntry, _change: DetailedLineRangeMapping, _versionId: number, _editor: ICodeEditor, _lineDelta: number, instaService: IInstantiationService);
    dispose(): void;
    getId(): string;
    layout(startLineNumber: number): void;
    toggle(show: boolean): void;
    getDomNode(): HTMLElement;
    getPosition(): IOverlayWidgetPosition | null;
    getStartLineNumber(): number | undefined;
    reject(): void;
    accept(): void;
}
export {};
