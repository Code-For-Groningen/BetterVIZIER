import { Disposable } from "../../../../../base/common/lifecycle.js";
import { ILocalizedString } from "../../../../../nls.js";
import { IActionViewItemService } from "../../../../../platform/actions/browser/actionViewItemService.service.js";
import { IContextKeyService } from "../../../../../platform/contextkey/common/contextkey.service.js";
import { IInstantiationService } from "../../../../../platform/instantiation/common/instantiation.js";
import { IWorkbenchContribution } from "../../../../common/contributions.js";
import { IChatAgentService } from "../../common/chatAgents.service.js";
import { IChatQuotasService } from "../chatQuotasService.service.js";
import { IChatRequestViewModel, IChatResponseViewModel } from "../../common/chatViewModel.js";
export declare const CHAT_CATEGORY: ILocalizedString;
export declare const CHAT_OPEN_ACTION_ID = "workbench.action.chat.open";
export interface IChatViewOpenOptions {
    query: string;
    isPartialQuery?: boolean;
    variableIds?: string[];
    previousRequests?: IChatViewOpenRequestEntry[];
    attachScreenshot?: boolean;
}
export interface IChatViewOpenRequestEntry {
    request: string;
    response: string;
}
export declare function registerChatActions(): void;
export declare function stringifyItem(item: IChatRequestViewModel | IChatResponseViewModel, includeName?: boolean): string;
export declare class ChatCommandCenterRendering extends Disposable implements IWorkbenchContribution {
    static readonly ID = "chat.commandCenterRendering";
    constructor(actionViewItemService: IActionViewItemService, agentService: IChatAgentService, chatQuotasService: IChatQuotasService, instantiationService: IInstantiationService, contextKeyService: IContextKeyService);
}
