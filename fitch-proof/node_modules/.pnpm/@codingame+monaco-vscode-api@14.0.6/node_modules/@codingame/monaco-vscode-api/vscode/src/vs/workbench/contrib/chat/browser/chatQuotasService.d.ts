import { Event } from "../../../../base/common/event.js";
import { Disposable } from "../../../../base/common/lifecycle.js";
import { IContextKeyService } from "../../../../platform/contextkey/common/contextkey.service.js";
import { IWorkbenchContribution } from "../../../common/contributions.js";
import { IStatusbarService } from "../../../services/statusbar/browser/statusbar.service.js";
import { IChatQuotasService } from "./chatQuotasService.service.js";
export interface IChatQuotas {
    chatQuotaExceeded: boolean;
    completionsQuotaExceeded: boolean;
    quotaResetDate: Date | undefined;
}
export declare const OPEN_CHAT_QUOTA_EXCEEDED_DIALOG = "workbench.action.chat.openQuotaExceededDialog";
export declare class ChatQuotasService extends Disposable implements IChatQuotasService {
    private readonly contextKeyService;
    _serviceBrand: undefined;
    private readonly _onDidChangeQuotas;
    readonly onDidChangeQuotas: Event<void>;
    private _quotas;
    get quotas(): IChatQuotas;
    private readonly chatQuotaExceededContextKey;
    private readonly completionsQuotaExceededContextKey;
    private ExtensionQuotaContextKeys;
    constructor(contextKeyService: IContextKeyService);
    private registerListeners;
    private registerActions;
    acceptQuotas(quotas: IChatQuotas): void;
    clearQuotas(): void;
    private updateContextKeys;
}
export declare class ChatQuotasStatusBarEntry extends Disposable implements IWorkbenchContribution {
    private readonly statusbarService;
    private readonly chatQuotasService;
    static readonly ID = "chat.quotasStatusBarEntry";
    private readonly entry;
    constructor(statusbarService: IStatusbarService, chatQuotasService: IChatQuotasService);
    private updateStatusbarEntry;
}
export declare function quotaToButtonMessage({ chatQuotaExceeded, completionsQuotaExceeded }: {
    chatQuotaExceeded: boolean;
    completionsQuotaExceeded: boolean;
}): string;
